{
  
    
        "post0": {
            "title": "Charting a Marketing Acquisition Funnel",
            "content": "%matplotlib inline import pandas as pd from collections import OrderedDict import matplotlib.pyplot as plt import matplotlib.patches as patches import seaborn as sns sns.set_style(&#39;whitegrid&#39;) . # start with some dummy data df = pd.DataFrame({ &#39;date&#39;:[&#39;2019-08-01&#39;,&#39;2019-09-01&#39;], &#39;website_traffic&#39;:[530771,558652], &#39;new_accounts&#39;:[15720,15900], &#39;account_verify&#39;:[12670,13884], &#39;product_activated&#39;:[10812,12909], &#39;paid_conversion&#39;:[654,908], &#39;some_other_metric&#39;:[13270,13678] }) df . date website_traffic new_accounts account_verify product_activated paid_conversion some_other_metric . 0 2019-08-01 | 530771 | 15720 | 12670 | 10812 | 654 | 13270 | . 1 2019-09-01 | 558652 | 15900 | 13884 | 12909 | 908 | 13678 | . df[&#39;date&#39;] = pd.to_datetime(df[&#39;date&#39;],format=&#39;%Y-%m-%d&#39;) . df.info() . &lt;class &#39;pandas.core.frame.DataFrame&#39;&gt; RangeIndex: 2 entries, 0 to 1 Data columns (total 7 columns): # Column Non-Null Count Dtype -- -- 0 date 2 non-null datetime64[ns] 1 website_traffic 2 non-null int64 2 new_accounts 2 non-null int64 3 account_verify 2 non-null int64 4 product_activated 2 non-null int64 5 paid_conversion 2 non-null int64 6 some_other_metric 2 non-null int64 dtypes: datetime64[ns](1), int64(6) memory usage: 240.0 bytes . # define only the KPIs we want to see (since there are cases where other metrics are present in the dataframe) all_kpis = [&#39;website_traffic&#39;,&#39;new_accounts&#39;,&#39;account_verify&#39;,&#39;product_activated&#39;,&#39;paid_conversion&#39;] . all_names = tuple([x.replace(&#39;_&#39;,&#39; n&#39;).title() for x in all_kpis]) . def get_it_in_order(df,mask,month): &quot;&quot;&quot; Biggest assumption: there is a &#39;date&#39; column (not index!) in the dataframe that is *literally named* &#39;date&#39; Accepts entire dataframe Supply a column mask Supply a list of column names &quot;&quot;&quot; kpis = OrderedDict() frame_2_dict = df.set_index(&#39;date&#39;).loc[month,mask].to_dict() for i in mask: kpis[i] = frame_2_dict[i] return kpis . def add_arrow(x_adjust,y_adjust,ratio): bbox_props = dict(boxstyle=&quot;rarrow,pad=0.5&quot;, facecolor=&quot;grey&quot;, edgecolor=&quot;grey&quot;, alpha=0.75, lw=1) return plt.text(x_adjust,y_adjust,&#39;{0:.1f}%&#39;.format(ratio * 100), verticalalignment=&#39;center&#39;, horizontalalignment=&#39;left&#39;, fontsize=16, weight=&#39;black&#39;, color=&#39;white&#39;, bbox=bbox_props) . def plot_acquisition_funnel(df, month, names, metrics): data = get_it_in_order(df, metrics, month) count = range(len(data)) fig, ax = plt.subplots(figsize=(10, 6)) rects = ax.bar(count, data.values(), width=.5, align=&#39;center&#39;, color=sns.color_palette(&quot;Blues&quot;, len(data))) plt.xticks(count, names) plt.ylim(bottom=0, top=data[metrics[1]]*2) plt.title(&#39;{0} Acquisition Funnel&#39;.format(month), fontsize=16) plt.tick_params(labelsize=16) add_arrow(0.27, data[metrics[3]]/1.7, data[metrics[1]]/data[metrics[0]]) add_arrow(1.27, data[metrics[3]]/1.7, data[metrics[2]]/data[metrics[1]]) add_arrow(2.27, data[metrics[3]]/1.7, data[metrics[3]]/data[metrics[2]]) add_arrow(3.27, data[metrics[3]]/1.7, data[metrics[4]]/data[metrics[3]]) for rect, val in zip(rects,data.values()): height = rect.get_height() if height &gt; 250: label_color = &#39;grey&#39; else: label_color = &#39;white&#39; ax.text(rect.get_x() + rect.get_width()/2,250,&#39;{:,}&#39;.format(val),ha=&#39;center&#39;, va=&#39;bottom&#39;,fontsize=12,weight=&#39;bold&#39;,color=label_color) plt.grid(False) plt.show() . plot_acquisition_funnel(df,&#39;2019-08-01&#39;,all_names,all_kpis) .",
            "url": "http://blog.measureallthethin.gs/viz/jupyter/2020/05/02/charting-a-marketing-funnel.html",
            "relUrl": "/viz/jupyter/2020/05/02/charting-a-marketing-funnel.html",
            "date": " • May 2, 2020"
        }
        
    
  

  
  

  
      ,"page1": {
          "title": "About Me",
          "content": "This is where you put the contents of your About page. Like all your pages, it’s in Markdown format. . This website is powered by fastpages 1. . a blogging platform that natively supports Jupyter notebooks in addition to other formats. &#8617; . |",
          "url": "http://blog.measureallthethin.gs/about/",
          "relUrl": "/about/",
          "date": ""
      }
      
  

  

  
  

  

  
  

  

  
  

  
  

  
  

  
      ,"page10": {
          "title": "",
          "content": "Sitemap: {{ “sitemap.xml” | absolute_url }} | .",
          "url": "http://blog.measureallthethin.gs/robots.txt",
          "relUrl": "/robots.txt",
          "date": ""
      }
      
  

}